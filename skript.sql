-- MySQL Script generated by MySQL Workbench
-- piÄ…, 20 mar 2020, 13:28:16
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema stats
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `stats` ;

-- -----------------------------------------------------
-- Schema stats
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `stats` ;
USE `stats` ;

-- -----------------------------------------------------
-- Table `stats`.`players`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stats`.`players` ;

CREATE TABLE IF NOT EXISTS `stats`.`players` (
  `id-player` TINYINT(1) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id-player`));


-- -----------------------------------------------------
-- Table `stats`.`stats`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stats`.`stats` ;

CREATE TABLE IF NOT EXISTS `stats`.`stats` (
  `id-stats` TINYINT(1) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `value` INT(5) NOT NULL,
  `players_id-player` TINYINT(1) UNSIGNED NOT NULL,
  PRIMARY KEY (`id-stats`, `players_id-player`),
  INDEX `fk_stats-player_players_idx` (`players_id-player` ASC),
  CONSTRAINT `fk_stats-player_players`
    FOREIGN KEY (`players_id-player`)
    REFERENCES `stats`.`players` (`id-player`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `stats`.`weapons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stats`.`weapons` ;

CREATE TABLE IF NOT EXISTS `stats`.`weapons` (
  `id-weapons` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(5) NOT NULL,
  `hits` INT(4) NOT NULL,
  `shots` INT(4) NOT NULL,
  `kills` INT(3) NOT NULL,
  `players_id-player` TINYINT(1) UNSIGNED NOT NULL,
  PRIMARY KEY (`id-weapons`, `players_id-player`),
  INDEX `fk_weapons_players1_idx` (`players_id-player` ASC),
  CONSTRAINT `fk_weapons_players1`
    FOREIGN KEY (`players_id-player`)
    REFERENCES `stats`.`players` (`id-player`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `stats`.`items`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stats`.`items` ;

CREATE TABLE IF NOT EXISTS `stats`.`items` (
  `id-item` TINYINT(1) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(10) NOT NULL,
  `pickups` INT(3) NOT NULL,
  `players_id-player` TINYINT(1) UNSIGNED NOT NULL,
  PRIMARY KEY (`id-item`, `players_id-player`),
  INDEX `fk_items_players1_idx` (`players_id-player` ASC),
  CONSTRAINT `fk_items_players1`
    FOREIGN KEY (`players_id-player`)
    REFERENCES `stats`.`players` (`id-player`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `stats`.`powerups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stats`.`powerups` ;

CREATE TABLE IF NOT EXISTS `stats`.`powerups` (
  `id-powerups` TINYINT(1) UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(10) NOT NULL,
  `pickups` INT(3) NOT NULL,
  `time` INT(9) NOT NULL,
  `players_id-player` TINYINT(1) UNSIGNED NOT NULL,
  PRIMARY KEY (`id-powerups`, `players_id-player`),
  INDEX `fk_powerups_players1_idx` (`players_id-player` ASC),
  CONSTRAINT `fk_powerups_players1`
    FOREIGN KEY (`players_id-player`)
    REFERENCES `stats`.`players` (`id-player`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `stats`.`matches`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stats`.`matches` ;

CREATE TABLE IF NOT EXISTS `stats`.`matches` (
  `id-match` TINYINT(1) UNSIGNED NOT NULL,
  `datetime` VARCHAR(45) NOT NULL,
  `map` VARCHAR(10) NOT NULL,
  `type` VARCHAR(5) NOT NULL,
  `isTeamGame` TINYINT(1) NOT NULL,
  `duration` DECIMAL(5) NOT NULL,
  PRIMARY KEY (`id-match`));


-- -----------------------------------------------------
-- Table `stats`.`month_year`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stats`.`month_year` ;

CREATE TABLE IF NOT EXISTS `stats`.`month_year` (
  `id-month-year` TINYINT(1) UNSIGNED NOT NULL,
  `yaer` VARCHAR(4) NOT NULL,
  `month` CHAR(2) NOT NULL,
  `day` CHAR(2) NOT NULL,
  PRIMARY KEY (`id-month-year`));


-- -----------------------------------------------------
-- Table `stats`.`user_matches`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `stats`.`user_matches` ;

CREATE TABLE IF NOT EXISTS `stats`.`user_matches` (
  `id-user-relactions` TINYINT(1) UNSIGNED NOT NULL,
  `players_id-player` TINYINT(1) UNSIGNED NOT NULL,
  `month_year_id-month-year` TINYINT(1) UNSIGNED NOT NULL,
  `matches_id-match` TINYINT(1) UNSIGNED NOT NULL,
  PRIMARY KEY (`id-user-relactions`, `players_id-player`, `month_year_id-month-year`, `matches_id-match`),
  INDEX `fk_user_matches_month_year1_idx` (`month_year_id-month-year` ASC),
  INDEX `fk_user-matches_players1_idx` (`players_id-player` ASC),
  INDEX `fk_user_matches_matches1_idx` (`matches_id-match` ASC),
  CONSTRAINT `fk_user-matches_players1`
    FOREIGN KEY (`players_id-player`)
    REFERENCES `stats`.`players` (`id-player`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_matches_month_year1`
    FOREIGN KEY (`month_year_id-month-year`)
    REFERENCES `stats`.`month_year` (`id-month-year`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_matches_matches1`
    FOREIGN KEY (`matches_id-match`)
    REFERENCES `stats`.`matches` (`id-match`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
